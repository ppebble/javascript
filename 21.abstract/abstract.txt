추상화 ?? 객체들의 공통적인 프로퍼티와 메소드를 뽑아내는 작업

클래스의 선언부분과 구현부분 중 추상화는 오직 선언부분에만 정의할 뿐 구현 부분은 작업하지 않는다.

    

    단순한 객체추상화 예제 ?

    function ImageSlider(){
        this.selectIndex;
        this.$ImageList;
    }
    ImageSlider.prototype.startAutoPlay=function(){}
    ImageSlider.prototype.stopAutoPlay=function(){

    }
    ImageSlider.prototype.nextImage=function(){} 
     
    ...

                        정렬기능 인터페이스
                        정렬기능($image) 추상메소드

                        function.가로정렬 메소드    ]
                        function.세로정렬 메소드    ]-구현 메소드 부분
                        ...                        ]
    

자바스크립트에서 추상화 ?
    일반 OOP에서 지원하는 추상화 :: 일반클래스 / 추상클래스 / 인터페이스 ...

    자바스크립트에서 추상화 ? 따로 제공하지 않기 때문에 클래스만을 이용해 추상화 작업을 진행해야한다.


캡슐화;Encapsulation . . . 연관 있는 변수와 함수를 클래스로 묶는 작업
    -은닉성 :: 클래스의 담는 내용 중 중요한 데이터나 기능을 외부에서 접근하지 못하게 하는 기능

    OOP에서 지원하는 캡슐화 ?
    1)접근 제어자 :: 객체 내부에 들어 있는 프로퍼티와 메소드는 객체 외부 객체 , 객체 내부 자식 객체에서 접근해 사용한다.
    (자식객체가 부모객체의 메소드와 프로퍼티를 사용할 수 있음)
    public : 어디서나 접근 가능
    protected : 같은 패키지, 다른 패키지의 자식 클래스에서만 접근 가능함.
    private : 같은 클래스 내에서만 접근 가능

    2)UML로 접근지정자 표시
    public :: +  protected :: #  private :: -
                                            Phone
                                            -model
                                            -color
                                            +Phone(model.color)
                                            +showInfo()
    
    

자바스크립트에서 캡슐화 ? 자바스크립트는 접근제어자 문법을 지원하지 않는다 . . .
                    대신 흉내 내어 사용 가능 ::
                    function MyClass(){
                        //public protperty
                        this.protperty = value;
                        //private,protected protperty
                        this._property = value;
                    }
                    public :: property, method
                    protected :: _property, _method
                    private :: _property, _method
                    물론 문법적으론 접근할 수 있지만 무언의 약속으로 접근하면 안되는갑다 하고 피해야한다.
